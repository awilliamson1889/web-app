name: build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flask_test.db
          POSTGRES_USER: postgres

        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install postgresql
        run: |
          sudo service postgresql start
          sudo su - postgres
          psql
          CREATE DATABASE fkask_test;
          \q
      - name: Install dependencies
        run:
          python -m pip install --upgrade pip
          pip install coverage
          pip install flask-migrate --upgrade
          pip install -r requirements.txt
          pip install pylint
          pip install pylint-flask
          pip install pylint-flask-sqlalchemy
      - name: Run pylint check
        run:
          pylint --load-plugins pylint_flask_sqlalchemy department_app
      - name: Run tests
        run: coverage run -m unittest
      - name: Install dependencies for Coveralls
        run:
          pip install coveralls
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
